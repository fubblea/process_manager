# .github/workflows/tauri-release.yml
name: Build & Release Tauri
on: [push, workflow_dispatch]

env:
  NODE_VERSION: 20
  RUST_TOOLCHAIN: stable

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    outputs:
      version: ${{ steps.pkg_ver.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      # ---------- Linux runtime libraries ----------
      - name: 🔧 Install Linux system dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y \
            libwebkit2gtk-4.1-dev \
            build-essential curl wget file \
            libxdo-dev libssl-dev \
            libgtk-3-dev libglib2.0-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
          # the list above follows Tauri's official Debian/Ubuntu prerequisites :contentReference[oaicite:0]{index=0}

      - name: 🧰 Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: 🦀 Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}

      - name: 📦 Install JS deps
        run: npm ci

      # ---------- Cross-shell safe version extraction ----------
      - name: 🏷  Read version from package.json
        id: pkg_ver
        shell: bash            # works on Windows because Git-for-Windows Bash is pre-installed
        run: |
          echo "version=$(node -p \"require('./package.json').version\")" >> "$GITHUB_OUTPUT"
          # the pattern node -p require('./package.json').version is known-good on every shell :contentReference[oaicite:1]{index=1}

      - name: 🔨 Build Tauri bundle
        run: npm run tauri build

      - name: 📤  Upload bundle as artifact
        uses: actions/upload-artifact@v4
        with:
          # ==> tauri‑1.4.2‑windows, tauri‑1.4.2‑macos, tauri‑1.4.2‑ubuntu …
          name: tauri-${{ steps.pkg_ver.outputs.version }}-${{ matrix.os }}
          path: src-tauri/target/release/bundle/**/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with: { path: dist }

      - name: Git tag
        env: { VERSION: ${{ needs.build.outputs.version }} }
        uses: actions/github-script@v7
        with:
          script: |
            const tag = `v${process.env.VERSION}`;
            const { owner, repo } = context.repo;
            const refs = await github.rest.git.listMatchingRefs({ owner, repo, ref: `tags/${tag}` });
            if (refs.data.length === 0) {
              await github.rest.git.createRef({ owner, repo, ref: `refs/tags/${tag}`, sha: context.sha });
              core.info(`Created tag ${tag}`);
            } else core.info(`Tag ${tag} already exists`);

      - name: 🚀 Publish GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.build.outputs.version }}
          name: v${{ needs.build.outputs.version }}
          generate_release_notes: true
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
